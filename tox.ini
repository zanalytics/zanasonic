[tox]
skipsdist = true
envlist = test_package, typechecks, stylechecks, lint

[testenv]
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run pytest

passenv =
	KAGGLE_USERNAME
	KAGGLE_KEY
	GEMFURY_PUSH_URL

[testenv:test_package]
setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
    poetry install -v
	poetry run python zanasonic/train_pipeline.py
	pytest \
	-s \
	-vv \
	{posargs:tests/}

[testenv:train]
envdir = {toxworkdir}/test_package
; deps =
; 	{[testenv:test_package]deps}

setenv =
	{[testenv:test_package]setenv}

commands=
	poetry run python zanasonic/train_pipeline.py

; [testenv:fetch_data]
; envdir = {toxworkdir}/test_package

; setenv =
; 	{[testenv:test_package]setenv}

; commands=
; 	# fetch
; 	; kaggle competitions download -c house-prices-advanced-regression-techniques -p ./regression_model/datasets
; 	; # unzip
; 	; unzip ./regression_model/datasets/house-prices-advanced-regression-techniques.zip -d ./regression_model/datasets


; [testenv:publish_model]
; envdir = {toxworkdir}/test_package
; ; deps =
; ; 	{[testenv:test_package]deps}

; setenv =
; 	{[testenv:test_package]setenv}

; commands=
; 	python zanasonic/train_pipeline.py
; 	./publish_model.sh .


; [testenv:typechecks]
; envdir = {toxworkdir}/test_package

; ; deps =
; ; 	{[testenv:test_package]deps}

; commands = {posargs:mypy regression_model}


; [testenv:stylechecks]
; envdir = {toxworkdir}/test_package

; ; deps =
; ; 	{[testenv:test_package]deps}

; commands = {posargs:flake8 zanasonic tests}


; [testenv:lint]
; envdir = {toxworkdir}/test_package

; ; deps =
; ; 	{[testenv:test_package]deps}

; commands =
; 	isort zanasonic tests
; 	black zanasonic tests
; 	mypy zanasonic
; 	flake8 zanasonic

; [flake8]
; exclude = .git,env
; max-line-length = 90
